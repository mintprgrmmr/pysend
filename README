## О проекте
Простая реализация клиента и сервера на Python для передачи файла по UDP.  Сервер принимает соединение, сохраняет файл и отправляет подтверждение. Клиент подключается, отправляет файл и ждёт ответ от сервера.

## Реализация
- UDP клиент и сервер для передачи файлов.
- Bash-скрипт для генерации тестовых данных и проверки результата.
- Обработка ошибок (OSError, ConnectionRefusedError, FileNotFoundError), type hints (mypy).
- Логирование шагов работы с единообразными сообщениями.
- Файлы клиента и сервера разделены по папкам (`src/` для кода, `test/` для тестовых файлов).

## Запуск
1. Создать и активировать виртуальное окружение (по желанию):
   ```bash
   python3 -m venv venv
   source venv/bin/activate
2. Запустить тестовый скрипт:
    ```bash
    ./test.sh
    ```
Скрипт:
- создаст каталоги test/data/source и test/data/saved;
- сгенерирует бинарный файл source.bin (2 MB случайных байт);
- запустит сервер и клиента;
- сравнит исходный и полученный файлы через `cmp`.

Если всё успешно: [TEST] FAIL: файлы различаются.*

*UDP не гарантирует: сохранность всех пакетов (часть может потеряться); порядок доставки (пакеты могут прийти не по очереди), целостность файла целиком. Cкрипт честно показывает ненадёжность UDP для передачи файлов.

## Источники

[UDP-ССЫЛКИ] В процессе работы использовалась официальная документация и материалы для изучения:

UDP socket:
- [Python docs — UDP Communication](https://wiki.python.org/moin/UdpCommunication)
- [Python docs — socket HOWTO](https://docs.python.org/3/howto/sockets.html)
- [Python docs — Low-level networking interface](https://docs.python.org/2/library/socket.html)
